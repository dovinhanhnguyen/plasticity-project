   atom_style		granular	# atoms will have coordinates, velocities, atom IDs, types, and diameter, mass, angular velocity
   boundary		p f f		# periodic in x, fixed in y and z
   newton		off		# if two particles on different processors, results are not communicated
   atom_modify		map array	# processors store lookup table of length equal to number of particles
   communicate		single vel yes	# set inter-processor communication
   units		si		# use SI units

   ### Region
   region		reg block 0.0 0.02 0.0 0.04 -0.00065 0.00065  units box	# ID style xlo xhi ylo yhi zlo zhi keyword arg (region ID=reg, units defined by the units command)
   #create_box		1 reg

   read_restart 	restart/test-filling.restart	# read restart file

   neighbor		0.002 bin	# extra_distance_beyond_force_cutoff algorithm_used_to_build_the_neighbor_list
   neigh_modify		delay 0		# delay 0 step since last build

   ### Material properties
   fix			m1 all property/global youngsModulus peratomtype   5.e6			# ID group_ID atom_or_global valid_C++_string style args (fix ID=m1, global)
   fix			m2 all property/global poissonsRatio peratomtype   0.15			# ID group_ID atom_or_global valid_C++_string style args (fix ID=m2, global)
   fix			m3 all property/global coefficientRestitution peratomtypepair 1 0.7	# ID group_ID atom_or_global valid_C++_string style args (fix ID=m3, global, wall=1)
   fix			m4 all property/global coefficientFriction peratomtypepair 1 0.5	# ID group_ID atom_or_global valid_C++_string style args (fix ID=m4, global, wall=1)

   ### Contact model
   pair_style		gran model hertz tangential history	# contact model
   pair_coeff		* *			# default
   timestep		0.000001		# timestep is 1 microsec
   fix			1 all nve/sphere	# constant no of particles n; volume v, energy e are regulated; total energy is conserved; temperature t, pressure p are unregulated


   ### Computes
   compute		ymax all reduce max y	# ID group_ID reduce which_attribute arg (take vector and pick out the maximum y as scalar, ID=55)
   compute		11 all stress/atom pair	# ID group_ID stress/atom arg
   compute		1 all erotate/sphere	# ID group_ID erotate/sphere (compute total rotational KE)
   compute		contno all contact/atom
   variable		high equal c_ymax	# store result of the 'compute 55' in a variable called high

   fix			ts all check/timestep/gran 1000 0.1 0.1	# ID group_ID check/timestep/gran nevery fraction_r fraction_h (estimate Rayleigh-Hertz time every nevery timesteps)
   thermo_style		custom step atoms ke c_ymax	# print thermo info: timestep, no of atoms, ke, 'compute 55' to screen and log file
   thermo		5000				# output thermo info every 5000 timesteps
   thermo_modify	lost ignore norm no		# ignore lost atoms, don't normalize various thermo info by no of atoms
   restart		5000    restart/file1.restart restart/file2.restart	# write 2 restart files every 5000 timesteps, toggle between them

   ### Walls
   fix			12 all freeze				# ID group_ID freeze (zero out the force and torque on particles)
   velocity		all set 0  0 0 sum no units box		# set vx vy vz to 0, sum=no means new velocity will replace the old one
   set			type 1  omegax 0 omegay 0 omegaz 0	# set omegax, omegay, omegaz of all atoms to be zero
   run 			1					# run 1 timestep to obtain high of the system
   unfix		12					# remove the freeze constraint and keep going as before

   fix			bottom all wall/gran model hertz tangential history primitive type 1  yplane  0	# bound the simulation domain of the granular system with a frictional wall
   fix			moving all wall/gran model hertz tangential history primitive type 1  yplane  ${high}+0.00050  shear  x 0.0005	# shear wall with shear velocity=0.0001

   dump			dump_full_info all custom 5000 post/full_info*.Shear id type radius x y z vx vy vz fx fy fz omegax omegay omegaz c_contno	# dump info every 5000 timesteps
   #dump			dump_particles all custom/vtk 5000 post/restart_dump_*.vtk id type radius x y z   vx vy vz fx fy fz omegax omegay omegaz

   ### Running

   fix			2D all setforce NULL NULL 0	# ID group_ID setforce fx fy fz (ID=2D, NULL means do not alter force in that dimension, zero fz every timestep)

   run			400000				# run 400000 timesteps

   write_restart	restart/second.restart		# write a binary file of the current state of the simulation


